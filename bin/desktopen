#!/usr/bin/env ruby

require 'optparse'
require_relative '../lib/desktopen'

options = {}
OptionParser.new do |opts|

  opts.banner = "Usage: desktopen command_name [--fullscreen | -x N -y N -w N -h N] --viewport=N --display=N"

  opts.on("-f", "--fullscreen", "Open window in fullscreen") do |v|
    options[:fullscreen] = v
  end

  opts.on("-x N", "X position of the top-left corner of the window") do |v|
    options[:x] = v
  end

  opts.on("-y N", "Y position of the top-left corner of the window") do |v|
    options[:y] = v
  end

  opts.on("-w N", "window width") do |v|
    options[:w] = v
  end

  opts.on("-h N", "window height") do |v|
    options[:h] = v
  end

  opts.on("-v N", "--viewport=N", "viewport number to place the window at") do |v|
    options[:viewport] = v
  end

  opts.on("-d N", "--display=N", "display to place the window at") do |v|
    exit("Sorry, only up to 2 displays are currently supported!") if v.to_i > 2
    options[:display] = v
  end

  opts.on("-t N", "--repos-timeout=N", "timeout before repositioning a window, default 1 (second)") do |v|
    options[:repos_timeout] = v
  end

end.parse!

# Run the command and open that window.
old_window_ids_list = window_ids_list
pid = spawn("#{ARGV[0]}")
@find_window_by_pid_attempt = 0

# Give the process some time to load, otherwise we can start moving the window before
# it's properly opened and this may result in mispositioning.
# The sleep time obviously depends on the system, for slower PCs it should be set to a larger number.
sleep options[:repos_timeout].to_i || 1

position_and_resize_active_window(
  window_id: find_opened_window(old_window_ids_list),
  viewport:  options[:viewport],
  display:   options[:display],
  fullscreen: options[:fullscreen],
  x: options[:x],
  y: options[:y],
  w: options[:w],
  h: options[:h]
)
